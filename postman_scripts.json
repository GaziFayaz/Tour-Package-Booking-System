{
  "scripts": {
    "test:packages:api": "newman run postman_collection.json -e postman_environment.json --reporters cli,json --reporter-json-export packages-test-results.json",
    "test:packages:verbose": "newman run postman_collection.json -e postman_environment.json --reporters cli,htmlextra --reporter-htmlextra-export packages-reports/",
    "test:bookings:api": "newman run booking_system_postman.json -e postman_environment.json --reporters cli,json --reporter-json-export bookings-test-results.json",
    "test:all:api": "newman run postman_collection.json -e postman_environment.json && newman run booking_system_postman.json -e postman_environment.json",
    "postman:install": "npm install -g newman newman-reporter-htmlextra"
  },
  "workflows": {
    "setupCompletePackage": {
      "description": "Complete workflow to set up a package with all components",
      "steps": [
        "1. Create Package",
        "2. Create Slot", 
        "3. Create Package Fare",
        "4. Create Installment Plan",
        "5. Create Adult/Child/Infant Installment Values",
        "6. Create Adult/Child/Infant Addons",
        "7. Test Package Pricing endpoint"
      ]
    },
    "testingSequence": {
      "description": "Recommended testing sequence for packages API",
      "order": [
        "Packages → Slots → Package Fares → Installment Plans → Installment Values → Addons"
      ]
    }
  },
  "testCommands": {
    "description": "Add these scripts to your package.json scripts section for automated API testing",
    "note": "Run 'npm run postman:install' first to install Newman CLI",
    "usage": {
      "packages": "npm run test:packages:api",
      "bookings": "npm run test:bookings:api", 
      "all": "npm run test:all:api",
      "verbose": "npm run test:packages:verbose"
    }
  },
  "environmentVariables": {
    "required": [
      "baseUrl - API base URL (default: http://localhost:3000)",
      "packageId - Package ID for testing (default: 1)",
      "slotId - Slot ID for testing (default: 1)"
    ],
    "optional": [
      "installmentPlanId - For installment value testing",
      "addonId - For addon testing"
    ]
  }
}
