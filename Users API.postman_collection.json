{
	"info": {
		"_postman_id": "fad91196-4f60-4629-bc57-54febf213c38",
		"name": "Users API",
		"description": "User management API endpoints for the Tour Booking System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47157446"
	},
	"item": [
		{
			"name": "Create User (Super Admin Only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"Response has user data\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('email');",
							"    pm.expect(responseJson).to.have.property('name');",
							"    pm.expect(responseJson).to.have.property('role');",
							"});",
							"",
							"// Store user ID for future requests",
							"if (pm.response.code === 200 || pm.response.code === 201) {",
							"    const responseJson = pm.response.json();",
							"    if (responseJson.id) {",
							"        pm.collectionVariables.set(\"user_id\", responseJson.id.toString());",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"testuser@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1234567892\",\n  \"role\": \"admin\",\n  \"photoUrl\": \"https://example.com/photo.jpg\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				},
				"description": "Create a new user (only super admins can create users)"
			},
			"response": [
				{
					"name": "User Created Successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"testuser@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1234567892\",\n  \"role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 3,\n  \"name\": \"Test User\",\n  \"email\": \"testuser@example.com\",\n  \"phone\": \"+1234567892\",\n  \"role\": \"admin\",\n  \"photoUrl\": \"https://example.com/photo.jpg\",\n  \"createdAt\": \"2025-08-11T10:00:00.000Z\",\n  \"updatedAt\": \"2025-08-11T10:00:00.000Z\"\n}"
				}
			]
		},
		{
			"name": "Get All Users (Admin/Super Admin Only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.be.an('array');",
							"});",
							"",
							"pm.test(\"Each user has required properties\", function () {",
							"    const responseJson = pm.response.json();",
							"    if (responseJson.length > 0) {",
							"        responseJson.forEach(function(user) {",
							"            pm.expect(user).to.have.property('id');",
							"            pm.expect(user).to.have.property('email');",
							"            pm.expect(user).to.have.property('name');",
							"            pm.expect(user).to.have.property('role');",
							"        });",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				},
				"description": "Get all users (only admins and super admins can view all users)"
			},
			"response": [
				{
					"name": "Users Retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"Super Admin\",\n    \"email\": \"admin@example.com\",\n    \"phone\": \"+1234567890\",\n    \"role\": \"super_admin\",\n    \"photoUrl\": null,\n    \"createdAt\": \"2025-08-11T09:00:00.000Z\",\n    \"updatedAt\": \"2025-08-11T09:00:00.000Z\",\n    \"bookings\": []\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Admin User\",\n    \"email\": \"admin2@example.com\",\n    \"phone\": \"+1234567891\",\n    \"role\": \"admin\",\n    \"photoUrl\": null,\n    \"createdAt\": \"2025-08-11T09:30:00.000Z\",\n    \"updatedAt\": \"2025-08-11T09:30:00.000Z\",\n    \"bookings\": []\n  }\n]"
				}
			]
		},
		{
			"name": "Get User by ID (Admin/Super Admin Only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has user data\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('email');",
							"    pm.expect(responseJson).to.have.property('name');",
							"    pm.expect(responseJson).to.have.property('role');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/{{user_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				},
				"description": "Get a specific user by ID (only admins and super admins can view specific users)"
			},
			"response": [
				{
					"name": "User Retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 1,\n  \"name\": \"Super Admin\",\n  \"email\": \"admin@example.com\",\n  \"phone\": \"+1234567890\",\n  \"role\": \"super_admin\",\n  \"photoUrl\": null,\n  \"createdAt\": \"2025-08-11T09:00:00.000Z\",\n  \"updatedAt\": \"2025-08-11T09:00:00.000Z\",\n  \"bookings\": []\n}"
				},
				{
					"name": "User Not Found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"999"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"statusCode\": 404,\n  \"message\": \"User with ID 999 not found\"\n}"
				}
			]
		},
		{
			"name": "Get User by Email (Admin/Super Admin Only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has user data\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('email');",
							"    pm.expect(responseJson).to.have.property('name');",
							"    pm.expect(responseJson).to.have.property('role');",
							"});",
							"",
							"pm.test(\"Email matches request\", function () {",
							"    const responseJson = pm.response.json();",
							"    const requestedEmail = pm.request.url.path[2]; // email parameter",
							"    pm.expect(responseJson.email).to.eql(requestedEmail);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/email/{{user_email}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"email",
						"{{user_email}}"
					]
				},
				"description": "Get a user by email address (only admins and super admins can search by email)"
			},
			"response": [
				{
					"name": "User Found by Email",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/email/admin@example.com",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"email",
								"admin@example.com"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 1,\n  \"name\": \"Super Admin\",\n  \"email\": \"admin@example.com\",\n  \"phone\": \"+1234567890\",\n  \"role\": \"super_admin\",\n  \"photoUrl\": null,\n  \"createdAt\": \"2025-08-11T09:00:00.000Z\",\n  \"updatedAt\": \"2025-08-11T09:00:00.000Z\",\n  \"bookings\": []\n}"
				},
				{
					"name": "User Not Found by Email",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/email/nonexistent@example.com",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"email",
								"nonexistent@example.com"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"statusCode\": 404,\n  \"message\": \"User not found\"\n}"
				}
			]
		},
		{
			"name": "Update User (Super Admin Only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has updated user data\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('email');",
							"    pm.expect(responseJson).to.have.property('name');",
							"    pm.expect(responseJson).to.have.property('role');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Updated User Name\",\n  \"phone\": \"+1234567899\",\n  \"photoUrl\": \"https://example.com/updated-photo.jpg\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/{{user_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				},
				"description": "Update user information (only super admins can update users including role changes)"
			},
			"response": [
				{
					"name": "User Updated Successfully",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated User Name\",\n  \"phone\": \"+1234567899\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 2,\n  \"name\": \"Updated User Name\",\n  \"email\": \"admin2@example.com\",\n  \"phone\": \"+1234567899\",\n  \"role\": \"admin\",\n  \"photoUrl\": \"https://example.com/updated-photo.jpg\",\n  \"createdAt\": \"2025-08-11T09:30:00.000Z\",\n  \"updatedAt\": \"2025-08-11T10:30:00.000Z\",\n  \"bookings\": []\n}"
				}
			]
		},
		{
			"name": "Update User Role (Super Admin Only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"User role updated\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('role');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"role\": \"super_admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/{{user_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				},
				"description": "Update user role (only super admins can change user roles, cannot demote the last super admin)"
			},
			"response": [
				{
					"name": "Role Updated Successfully",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"super_admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 2,\n  \"name\": \"Updated User Name\",\n  \"email\": \"admin2@example.com\",\n  \"phone\": \"+1234567899\",\n  \"role\": \"super_admin\",\n  \"photoUrl\": \"https://example.com/updated-photo.jpg\",\n  \"createdAt\": \"2025-08-11T09:30:00.000Z\",\n  \"updatedAt\": \"2025-08-11T10:35:00.000Z\",\n  \"bookings\": []\n}"
				},
				{
					"name": "Cannot Demote Last Super Admin",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"statusCode\": 403,\n  \"message\": \"Cannot remove the role of the last super admin\"\n}"
				}
			]
		},
		{
			"name": "Delete User (Super Admin Only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success message\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('message');",
							"    pm.expect(responseJson.message).to.include('deleted successfully');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/{{user_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				},
				"description": "Delete a user (only super admins can delete users)"
			},
			"response": [
				{
					"name": "User Deleted Successfully",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"User deleted successfully\"\n}"
				},
				{
					"name": "User Not Found for Deletion",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"999"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"statusCode\": 404,\n  \"message\": \"User with ID 999 not found\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "user_email",
			"value": "test@example.com",
			"type": "string"
		}
	]
}