{
  "info": {
    "name": "Users APIs - Tour Booking System",
    "description": "User management endpoints with JWT authentication for the Tour Package Booking System",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "1",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Create User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"password\": \"securepassword123\",\n  \"phone\": \"+1987654321\",\n  \"photoUrl\": \"https://example.com/jane.jpg\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users",
          "host": ["{{baseUrl}}"],
          "path": ["users"]
        },
        "description": "Create a new user account. Requires authentication. Password will be automatically hashed."
      },
      "response": [
        {
          "name": "User Created",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"password\": \"securepassword123\",\n  \"phone\": \"+1987654321\",\n  \"photoUrl\": \"https://example.com/jane.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "status": "Created",
          "code": 201,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"id\": 2,\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"phone\": \"+1987654321\",\n  \"photoUrl\": \"https://example.com/jane.jpg\",\n  \"createdAt\": \"2025-08-11T14:30:00.000Z\",\n  \"updatedAt\": \"2025-08-11T14:30:00.000Z\",\n  \"bookings\": []\n}"
        }
      ]
    },
    {
      "name": "Get All Users",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/users",
          "host": ["{{baseUrl}}"],
          "path": ["users"]
        },
        "description": "Retrieve all users with their associated bookings. Requires authentication. Passwords are automatically excluded from response."
      },
      "response": [
        {
          "name": "Users Retrieved",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "[\n  {\n    \"id\": 1,\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+1234567890\",\n    \"photoUrl\": \"https://example.com/photo.jpg\",\n    \"createdAt\": \"2025-08-11T14:00:00.000Z\",\n    \"updatedAt\": \"2025-08-11T14:00:00.000Z\",\n    \"bookings\": []\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane.smith@example.com\",\n    \"phone\": \"+1987654321\",\n    \"photoUrl\": \"https://example.com/jane.jpg\",\n    \"createdAt\": \"2025-08-11T14:30:00.000Z\",\n    \"updatedAt\": \"2025-08-11T14:30:00.000Z\",\n    \"bookings\": []\n  }\n]"
        }
      ]
    },
    {
      "name": "Get User by ID",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/users/{{user_id}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{user_id}}"]
        },
        "description": "Retrieve a specific user by their ID with associated bookings. Requires authentication."
      },
      "response": [
        {
          "name": "User Found",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["users", "1"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"id\": 1,\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1234567890\",\n  \"photoUrl\": \"https://example.com/photo.jpg\",\n  \"createdAt\": \"2025-08-11T14:00:00.000Z\",\n  \"updatedAt\": \"2025-08-11T14:00:00.000Z\",\n  \"bookings\": []\n}"
        }
      ]
    },
    {
      "name": "Get User by Email",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/users/email/john.doe@example.com",
          "host": ["{{baseUrl}}"],
          "path": ["users", "email", "john.doe@example.com"]
        },
        "description": "Retrieve a user by their email address. Requires authentication."
      },
      "response": [
        {
          "name": "User Found by Email",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/email/john.doe@example.com",
              "host": ["{{baseUrl}}"],
              "path": ["users", "email", "john.doe@example.com"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"id\": 1,\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1234567890\",\n  \"photoUrl\": \"https://example.com/photo.jpg\",\n  \"createdAt\": \"2025-08-11T14:00:00.000Z\",\n  \"updatedAt\": \"2025-08-11T14:00:00.000Z\",\n  \"bookings\": []\n}"
        }
      ]
    },
    {
      "name": "Update User",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"John Updated Doe\",\n  \"phone\": \"+1234567899\",\n  \"photoUrl\": \"https://example.com/updated-photo.jpg\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{user_id}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{user_id}}"]
        },
        "description": "Update user information. All fields are optional. Requires authentication."
      },
      "response": [
        {
          "name": "User Updated",
          "originalRequest": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Updated Doe\",\n  \"phone\": \"+1234567899\",\n  \"photoUrl\": \"https://example.com/updated-photo.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["users", "1"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"id\": 1,\n  \"name\": \"John Updated Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1234567899\",\n  \"photoUrl\": \"https://example.com/updated-photo.jpg\",\n  \"createdAt\": \"2025-08-11T14:00:00.000Z\",\n  \"updatedAt\": \"2025-08-11T15:00:00.000Z\",\n  \"bookings\": []\n}"
        }
      ]
    },
    {
      "name": "Delete User",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/users/{{user_id}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{user_id}}"]
        },
        "description": "Delete a user account. Requires authentication."
      },
      "response": [
        {
          "name": "User Deleted",
          "originalRequest": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["users", "1"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"message\": \"User deleted successfully\"\n}"
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Check if we have an access token",
          "const accessToken = pm.collectionVariables.get('access_token');",
          "if (!accessToken || accessToken === '') {",
          "    console.log('⚠️ No access token found. Please login first using the Auth API collection.');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Log response status",
          "console.log('Response status:', pm.response.code, pm.response.status);",
          "",
          "// Handle authentication errors",
          "if (pm.response.code === 401) {",
          "    console.log('❌ Unauthorized. Please check your access token or login again.');",
          "}"
        ]
      }
    }
  ]
}
