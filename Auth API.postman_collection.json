{
	"info": {
		"_postman_id": "f8a154dd-8e01-4fbf-a1e4-d0f69186857d",
		"name": "Auth API",
		"description": "Authentication API endpoints for the Tour Booking System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47157446"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"Response has access_token\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('access_token');",
							"    pm.expect(responseJson).to.have.property('user');",
							"});",
							"",
							"// Store the access token for future requests",
							"if (pm.response.code === 200 || pm.response.code === 201) {",
							"    const responseJson = pm.response.json();",
							"    if (responseJson.access_token) {",
							"        pm.collectionVariables.set(\"access_token\", responseJson.access_token);",
							"        pm.globals.set(\"access_token\", responseJson.access_token);",
							"    }",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"superadmin@example.com\",\n  \"password\": \"SuperAdmin123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				},
				"description": "Login with email and password to get access token"
			},
			"response": [
				{
					"name": "Successful Login",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": 1,\n    \"email\": \"admin@example.com\",\n    \"name\": \"Admin User\",\n    \"phone\": \"+1234567890\",\n    \"role\": \"super_admin\"\n  }\n}"
				},
				{
					"name": "Invalid Credentials",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"wrongpassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"statusCode\": 401,\n  \"message\": \"Invalid credentials\",\n  \"error\": \"Unauthorized\"\n}"
				}
			]
		},
		{
			"name": "Get Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has user profile data\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('userId');",
							"    pm.expect(responseJson).to.have.property('email');",
							"    pm.expect(responseJson).to.have.property('name');",
							"    pm.expect(responseJson).to.have.property('role');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/auth/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"profile"
					]
				},
				"description": "Get current user profile information (requires authentication)"
			},
			"response": [
				{
					"name": "Profile Retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"userId\": 1,\n  \"email\": \"admin@example.com\",\n  \"name\": \"Admin User\",\n  \"role\": \"super_admin\"\n}"
				}
			]
		},
		{
			"name": "Create User (Super Admin Only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"Response has access_token and user data\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('access_token');",
							"    pm.expect(responseJson).to.have.property('user');",
							"    pm.expect(responseJson.user).to.have.property('id');",
							"    pm.expect(responseJson.user).to.have.property('email');",
							"    pm.expect(responseJson.user).to.have.property('role');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"New Admin\",\n  \"email\": \"newadmin@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1234567891\",\n  \"role\": \"admin\",\n  \"photoUrl\": \"https://example.com/photo.jpg\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/create-user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"create-user"
					]
				},
				"description": "Create a new user with admin or super_admin role (only super admins can create users)"
			},
			"response": [
				{
					"name": "User Created Successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Admin\",\n  \"email\": \"newadmin@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1234567891\",\n  \"role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/create-user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"create-user"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": 2,\n    \"email\": \"newadmin@example.com\",\n    \"name\": \"New Admin\",\n    \"phone\": \"+1234567891\",\n    \"role\": \"admin\"\n  }\n}"
				},
				{
					"name": "Forbidden - Not Super Admin",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Admin\",\n  \"email\": \"newadmin@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1234567891\",\n  \"role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/create-user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"create-user"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"statusCode\": 403,\n  \"message\": \"Forbidden resource\",\n  \"error\": \"Forbidden\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		}
	]
}