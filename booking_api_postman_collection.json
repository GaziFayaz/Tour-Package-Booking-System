{
  "info": {
    "name": "Booking API Collection",
    "description": "NestJS Booking System API with TypeORM and MySQL - Complete collection for booking operations",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Bookings",
      "item": [
        {
          "name": "Create Booking",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"packageId\": 1,\n  \"slotId\": 1,\n  \"specialInstructions\": \"Group booking for family vacation\",\n  \"notes\": \"Special dietary requirements noted\",\n  \"concernPerson\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"123 Main St, New York, NY 10001, USA\"\n  },\n  \"passengers\": [\n    {\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+1234567890\",\n      \"type\": \"adult\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"dateOfBirth\": \"1985-01-15\",\n      \"gender\": \"male\",\n      \"passportNumber\": \"A12345678\",\n      \"passportScanUrl\": \"https://example.com/passport-scans/john-doe.jpg\",\n      \"tShirtSize\": \"L\",\n      \"foodRestrictions\": \"Vegetarian\",\n      \"specialInstructions\": \"Needs wheelchair assistance\",\n      \"sicknessInformation\": \"No known allergies\",\n      \"pickupPoint\": \"Hotel ABC Lobby\",\n      \"adultAddonIds\": [1, 2],\n      \"childAddonIds\": [],\n      \"infantAddonIds\": []\n    },\n    {\n      \"email\": \"jane.doe@example.com\",\n      \"phone\": \"+1234567891\",\n      \"type\": \"adult\",\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Doe\",\n      \"dateOfBirth\": \"1987-05-20\",\n      \"gender\": \"female\",\n      \"passportNumber\": \"B87654321\",\n      \"passportScanUrl\": \"https://example.com/passport-scans/jane-doe.jpg\",\n      \"tShirtSize\": \"M\",\n      \"foodRestrictions\": \"Gluten-free\",\n      \"pickupPoint\": \"Hotel ABC Lobby\",\n      \"adultAddonIds\": [1],\n      \"childAddonIds\": [],\n      \"infantAddonIds\": []\n    },\n    {\n      \"email\": \"child.doe@example.com\",\n      \"phone\": \"+1234567892\",\n      \"type\": \"child\",\n      \"firstName\": \"Emily\",\n      \"lastName\": \"Doe\",\n      \"dateOfBirth\": \"2015-08-10\",\n      \"gender\": \"female\",\n      \"tShirtSize\": \"S\",\n      \"foodRestrictions\": \"No nuts\",\n      \"pickupPoint\": \"Hotel ABC Lobby\",\n      \"adultAddonIds\": [],\n      \"childAddonIds\": [1],\n      \"infantAddonIds\": []\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            },
            "description": "Creates a new booking with concern person and passengers. Automatically calculates total amount based on package fares and selected addons."
          },
          "response": [
            {
              "name": "Successful Booking Creation",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"packageId\": 1,\n  \"slotId\": 1,\n  \"specialInstructions\": \"Group booking for family vacation\",\n  \"notes\": \"Special dietary requirements noted\",\n  \"concernPerson\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"123 Main St, New York, NY 10001, USA\"\n  },\n  \"passengers\": [\n    {\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+1234567890\",\n      \"type\": \"adult\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"dateOfBirth\": \"1985-01-15\",\n      \"gender\": \"male\",\n      \"passportNumber\": \"A12345678\",\n      \"tShirtSize\": \"L\",\n      \"foodRestrictions\": \"Vegetarian\",\n      \"pickupPoint\": \"Hotel ABC Lobby\",\n      \"adultAddonIds\": [1, 2]\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/bookings",
                  "host": ["{{baseUrl}}"],
                  "path": ["bookings"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": 1,\n  \"packageId\": 1,\n  \"slotId\": 1,\n  \"totalAmount\": 3500.00,\n  \"paidAmount\": 0.00,\n  \"pendingAmount\": 3500.00,\n  \"status\": \"pending\",\n  \"paymentStatus\": \"pending\",\n  \"specialInstructions\": \"Group booking for family vacation\",\n  \"notes\": \"Special dietary requirements noted\",\n  \"createdAt\": \"2025-08-07T10:30:00.000Z\",\n  \"updatedAt\": \"2025-08-07T10:30:00.000Z\",\n  \"package\": {\n    \"id\": 1,\n    \"name\": \"Adventure Package\",\n    \"description\": \"Exciting adventure tour\"\n  },\n  \"slot\": {\n    \"id\": 1,\n    \"name\": \"Morning Slot\",\n    \"startTime\": \"09:00:00\",\n    \"endTime\": \"17:00:00\"\n  },\n  \"concernPerson\": {\n    \"id\": 1,\n    \"bookingId\": 1,\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"123 Main St, New York, NY 10001, USA\"\n  },\n  \"passengers\": [\n    {\n      \"id\": 1,\n      \"bookingId\": 1,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+1234567890\",\n      \"type\": \"adult\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"dateOfBirth\": \"1985-01-15T00:00:00.000Z\",\n      \"gender\": \"male\",\n      \"passportNumber\": \"A12345678\",\n      \"tShirtSize\": \"L\",\n      \"foodRestrictions\": \"Vegetarian\",\n      \"pickupPoint\": \"Hotel ABC Lobby\",\n      \"adultAddons\": [\n        {\n          \"id\": 1,\n          \"name\": \"Meal Upgrade\",\n          \"fare\": 250.00\n        },\n        {\n          \"id\": 2,\n          \"name\": \"Photo Package\",\n          \"fare\": 150.00\n        }\n      ]\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Create Booking - Validation Error",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"packageId\": \"invalid\",\n  \"slotId\": null,\n  \"concernPerson\": {\n    \"name\": \"\",\n    \"email\": \"invalid-email\",\n    \"phone\": \"\",\n    \"address\": \"\"\n  },\n  \"passengers\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            },
            "description": "Example of validation errors when creating a booking with invalid data"
          },
          "response": [
            {
              "name": "Validation Error Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"packageId\": \"invalid\",\n  \"slotId\": null,\n  \"concernPerson\": {\n    \"name\": \"\",\n    \"email\": \"invalid-email\",\n    \"phone\": \"\",\n    \"address\": \"\"\n  },\n  \"passengers\": []\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/bookings",
                  "host": ["{{baseUrl}}"],
                  "path": ["bookings"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"statusCode\": 400,\n  \"message\": [\n    \"packageId must be a number conforming to the specified constraints\",\n    \"slotId should not be empty\",\n    \"slotId must be a number conforming to the specified constraints\",\n    \"concernPerson.name should not be empty\",\n    \"concernPerson.email must be an email\",\n    \"concernPerson.phone should not be empty\",\n    \"concernPerson.address should not be empty\",\n    \"passengers should not be empty\"\n  ],\n  \"error\": \"Bad Request\"\n}"
            }
          ]
        },
        {
          "name": "Create Booking - Package Not Found",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"packageId\": 999,\n  \"slotId\": 1,\n  \"specialInstructions\": \"Test booking\",\n  \"concernPerson\": {\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"Test Address\"\n  },\n  \"passengers\": [\n    {\n      \"email\": \"test@example.com\",\n      \"phone\": \"+1234567890\",\n      \"type\": \"adult\",\n      \"firstName\": \"Test\",\n      \"lastName\": \"User\",\n      \"dateOfBirth\": \"1990-01-01\",\n      \"gender\": \"male\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            },
            "description": "Example of error when trying to book with non-existent package ID"
          },
          "response": [
            {
              "name": "Package Not Found Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"packageId\": 999,\n  \"slotId\": 1,\n  \"concernPerson\": {\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"Test Address\"\n  },\n  \"passengers\": [\n    {\n      \"email\": \"test@example.com\",\n      \"phone\": \"+1234567890\",\n      \"type\": \"adult\",\n      \"firstName\": \"Test\",\n      \"lastName\": \"User\",\n      \"dateOfBirth\": \"1990-01-01\",\n      \"gender\": \"male\"\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/bookings",
                  "host": ["{{baseUrl}}"],
                  "path": ["bookings"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"statusCode\": 404,\n  \"message\": \"Package with ID 999 not found\",\n  \"error\": \"Not Found\"\n}"
            }
          ]
        },
        {
          "name": "Create Booking - Duplicate Concern Person",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"packageId\": 1,\n  \"slotId\": 1,\n  \"concernPerson\": {\n    \"name\": \"Existing User\",\n    \"email\": \"existing@example.com\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"Existing Address\"\n  },\n  \"passengers\": [\n    {\n      \"email\": \"existing@example.com\",\n      \"phone\": \"+1234567890\",\n      \"type\": \"adult\",\n      \"firstName\": \"Existing\",\n      \"lastName\": \"User\",\n      \"dateOfBirth\": \"1990-01-01\",\n      \"gender\": \"male\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            },
            "description": "Example of error when trying to create booking with existing concern person email/phone"
          },
          "response": [
            {
              "name": "Duplicate Concern Person Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"packageId\": 1,\n  \"slotId\": 1,\n  \"concernPerson\": {\n    \"name\": \"Existing User\",\n    \"email\": \"existing@example.com\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"Existing Address\"\n  },\n  \"passengers\": [\n    {\n      \"email\": \"existing@example.com\",\n      \"phone\": \"+1234567890\",\n      \"type\": \"adult\",\n      \"firstName\": \"Existing\",\n      \"lastName\": \"User\",\n      \"dateOfBirth\": \"1990-01-01\",\n      \"gender\": \"male\"\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/bookings",
                  "host": ["{{baseUrl}}"],
                  "path": ["bookings"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"statusCode\": 400,\n  \"message\": \"A concern person with email existing@example.com or phone +1234567890 already exists\",\n  \"error\": \"Bad Request\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Test Data Examples",
      "item": [
        {
          "name": "Family Booking with Multiple Passengers",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"packageId\": 1,\n  \"slotId\": 1,\n  \"specialInstructions\": \"Family of 4 - anniversary celebration\",\n  \"notes\": \"Please arrange for anniversary cake\",\n  \"concernPerson\": {\n    \"name\": \"Michael Johnson\",\n    \"email\": \"michael.johnson@example.com\",\n    \"phone\": \"+1555123456\",\n    \"address\": \"456 Oak Street, Los Angeles, CA 90210, USA\"\n  },\n  \"passengers\": [\n    {\n      \"email\": \"michael.johnson@example.com\",\n      \"phone\": \"+1555123456\",\n      \"type\": \"adult\",\n      \"firstName\": \"Michael\",\n      \"lastName\": \"Johnson\",\n      \"dateOfBirth\": \"1980-03-15\",\n      \"gender\": \"male\",\n      \"passportNumber\": \"US123456789\",\n      \"tShirtSize\": \"XL\",\n      \"pickupPoint\": \"Downtown Hotel\",\n      \"adultAddonIds\": [1, 3]\n    },\n    {\n      \"email\": \"sarah.johnson@example.com\",\n      \"phone\": \"+1555123457\",\n      \"type\": \"adult\",\n      \"firstName\": \"Sarah\",\n      \"lastName\": \"Johnson\",\n      \"dateOfBirth\": \"1982-07-22\",\n      \"gender\": \"female\",\n      \"passportNumber\": \"US987654321\",\n      \"tShirtSize\": \"M\",\n      \"foodRestrictions\": \"Dairy-free\",\n      \"pickupPoint\": \"Downtown Hotel\",\n      \"adultAddonIds\": [1, 2]\n    },\n    {\n      \"email\": \"alex.johnson@example.com\",\n      \"phone\": \"+1555123458\",\n      \"type\": \"child\",\n      \"firstName\": \"Alex\",\n      \"lastName\": \"Johnson\",\n      \"dateOfBirth\": \"2010-11-08\",\n      \"gender\": \"male\",\n      \"tShirtSize\": \"M\",\n      \"pickupPoint\": \"Downtown Hotel\",\n      \"childAddonIds\": [1]\n    },\n    {\n      \"email\": \"baby.johnson@example.com\",\n      \"phone\": \"+1555123459\",\n      \"type\": \"infant\",\n      \"firstName\": \"Emma\",\n      \"lastName\": \"Johnson\",\n      \"dateOfBirth\": \"2023-05-12\",\n      \"gender\": \"female\",\n      \"pickupPoint\": \"Downtown Hotel\",\n      \"infantAddonIds\": []\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            },
            "description": "Example of a family booking with adult, child, and infant passengers"
          }
        },
        {
          "name": "Group Booking - Corporate Event",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"packageId\": 2,\n  \"slotId\": 2,\n  \"specialInstructions\": \"Corporate team building event - 8 participants\",\n  \"notes\": \"Invoice to be sent to HR department\",\n  \"concernPerson\": {\n    \"name\": \"Jennifer Smith\",\n    \"email\": \"jennifer.smith@techcorp.com\",\n    \"phone\": \"+1555987654\",\n    \"address\": \"789 Business Blvd, Suite 100, San Francisco, CA 94105, USA\"\n  },\n  \"passengers\": [\n    {\n      \"email\": \"jennifer.smith@techcorp.com\",\n      \"phone\": \"+1555987654\",\n      \"type\": \"adult\",\n      \"firstName\": \"Jennifer\",\n      \"lastName\": \"Smith\",\n      \"dateOfBirth\": \"1985-09-12\",\n      \"gender\": \"female\",\n      \"tShirtSize\": \"L\",\n      \"pickupPoint\": \"TechCorp Office\",\n      \"adultAddonIds\": [1, 2, 3]\n    },\n    {\n      \"email\": \"david.brown@techcorp.com\",\n      \"phone\": \"+1555987655\",\n      \"type\": \"adult\",\n      \"firstName\": \"David\",\n      \"lastName\": \"Brown\",\n      \"dateOfBirth\": \"1988-04-25\",\n      \"gender\": \"male\",\n      \"tShirtSize\": \"XL\",\n      \"pickupPoint\": \"TechCorp Office\",\n      \"adultAddonIds\": [1, 3]\n    },\n    {\n      \"email\": \"lisa.wilson@techcorp.com\",\n      \"phone\": \"+1555987656\",\n      \"type\": \"adult\",\n      \"firstName\": \"Lisa\",\n      \"lastName\": \"Wilson\",\n      \"dateOfBirth\": \"1990-12-03\",\n      \"gender\": \"female\",\n      \"tShirtSize\": \"S\",\n      \"foodRestrictions\": \"Vegetarian\",\n      \"pickupPoint\": \"TechCorp Office\",\n      \"adultAddonIds\": [1]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            },
            "description": "Example of a corporate group booking"
          }
        },
        {
          "name": "Minimal Booking - Single Adult",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"packageId\": 1,\n  \"slotId\": 1,\n  \"concernPerson\": {\n    \"name\": \"Solo Traveler\",\n    \"email\": \"solo@example.com\",\n    \"phone\": \"+1555000001\",\n    \"address\": \"123 Solo Street, Adventure City, AC 12345, USA\"\n  },\n  \"passengers\": [\n    {\n      \"email\": \"solo@example.com\",\n      \"phone\": \"+1555000001\",\n      \"type\": \"adult\",\n      \"firstName\": \"Solo\",\n      \"lastName\": \"Traveler\",\n      \"dateOfBirth\": \"1992-06-15\",\n      \"gender\": \"other\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            },
            "description": "Minimal booking example with only required fields"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Pre-request script to set up any required variables",
          "pm.environment.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common test script for all requests",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has correct Content-Type header', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// For successful POST requests, save booking ID for future use",
          "if (pm.response.code === 201 && pm.response.json().id) {",
          "    pm.environment.set('lastBookingId', pm.response.json().id);",
          "}"
        ]
      }
    }
  ]
}
